<?xml version="1.0"?>

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>

<!--?xul-overlay  href="chrome://global/content/editMenuOverlay.xul"?-->
<?xul-overlay href="chrome://browser/content/baseMenuOverlay.xul"?>

<!DOCTYPE window [
<!ENTITY % bluegriffonDTD  SYSTEM "chrome://bluegriffon/locale/bluegriffon.dtd" >
<!ENTITY % findbarDTD      SYSTEM "chrome://bluegriffon/locale/findbar.dtd" >
<!ENTITY % structurebarDTD SYSTEM "chrome://bluegriffon/locale/structurebar.dtd" >
<!ENTITY % ariaDTD         SYSTEM "chrome://bluegriffon/locale/aria.dtd" >
<!ENTITY % brandDTD        SYSTEM "chrome://branding/locale/brand.dtd" >
<!ENTITY % baseMenuOverlayDTD SYSTEM "chrome://browser/locale/baseMenuOverlay.dtd">
%baseMenuOverlayDTD;
%bluegriffonDTD;
%findbarDTD;
%structurebarDTD;
%ariaDTD;
%brandDTD;
]>            

<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        id="hidden-window" windowtype="hidden-main"
        width="0" height="0" >

  <script><![CDATA[ 
    const PREFS_SERVICE_CONTRACTID = "@mozilla.org/preferences-service;1";
    const WNDMEDIATOR_SERVICE_CONTRACTID = "@mozilla.org/appshell/window-mediator;1";
    const CMDLINEHANDLER_SERVICE_CONTRACTID = "@disruptive-innovations.com/commandlinehandler/general-startup;1?type=bluegriffon";
    const Cc = Components.classes;
    const Ci = Components.interfaces;

    function selectMainWindowAndClose() {
      window.removeEventListener("load", selectMainWindowAndClose, false);
      GetUIElements();
    
      ComposerCommands.setupMainCommands();
      window.updateCommands("style");
      // Setup the dock menu.
      var dockMenuElement = document.getElementById("menu_mac_dockmenu");
      if (dockMenuElement != null) {
        var nativeMenu = Cc["@mozilla.org/widget/standalonenativemenu;1"]
                         .createInstance(Ci.nsIStandaloneNativeMenu);
  
        try {
          nativeMenu.init(dockMenuElement);
  
          var dockSupport = Cc["@mozilla.org/widget/macdocksupport;1"]
                            .getService(Ci.nsIMacDockSupport);
          dockSupport.dockMenu = nativeMenu;
        }
        catch (e) {
        }
      }

      var singletonWindowType = "bluegriffon";
      var windowMediator = Cc[WNDMEDIATOR_SERVICE_CONTRACTID].getService(Ci.nsIWindowMediator);
      var win = windowMediator.getMostRecentWindow(singletonWindowType);
      if (win) {
        win.focus();
      }
      else {
        OpenBlueGriffonWindow();
      }

    }

    function OpenBlueGriffonWindow()
    {
      window.openDialog("chrome://bluegriffon/content/xul/bluegriffon.xul", "_blank",
                        "chrome,all,dialog=no");
    }

    /*if (window.arguments && window.arguments[0]) {
      var handler = Components.classes[CMDLINEHANDLER_SERVICE_CONTRACTID].getService(Ci.nsICommandLineHandler);
      handler.QueryInterface(Ci.sbICommandLineManager).handleURL(window.arguments[0]);
    } */
    window.addEventListener("load", selectMainWindowAndClose, false);

  ]]></script>

  <script type="application/x-javascript" src="chrome://inspector/content/hooks.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/txns/diInnerHtmlChangedTxn.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/txns/diNodeInsertionTxn.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/txns/diNodeDeletionTxn.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/txns/diStyleAttrChangeTxn.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/txns/diCommentOrPIChangeTxn.js"/>

  <script type="application/javascript" src="chrome://bluegriffon/content/utils/dgid.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/utils/global.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/utils/notifiers.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/commands.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/bluegriffon.js"/>
  <script type="application/javascript" src="chrome://global/content/globalOverlay.js"/>
  <script type="application/javascript" src="chrome://global/content/nsDragAndDrop.js"/>
  <script type="application/javascript" src="chrome://global/content/nsTransferable.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/customize.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/colourPickerHelper.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/zoomManager.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/recentPages.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/toolbars.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/languages.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/recentPages.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/updateManager.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/rotate.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/cssRotations.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/html5.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/tableResizer.js"/>
  <script type="application/javascript" src="chrome://bluegriffon/content/js/beautify-html.js"/>
  <script type="application/javascript" src="resource://app/res/cm2/themes-list.js"/>

  <script type="application/javascript" src="chrome://venkman/content/venkman-overlay.js"/>

<broadcasterset id="broadcasterset"/>

<keyset id="mainKeySet">
  <key id="savekb"              key="&filesave.key;"         observes="cmd_save"      modifiers="accel"/>
  <key id="saveaskb"            key="&filesaveas.key;"       observes="cmd_saveAs"    modifiers="accel,shift"/>
  <key id="key_quitApplication" key="&quit.key;"                                      modifiers="accel"/>
  <key id="closetabkb"          key="&closeWindow.key;"      observes="cmd_closeTab"  modifiers="accel"/>
  <key id="openpagekb"          key="&openPage.key;"         observes="cmd_open"      modifiers="accel,shift"/>
  <key id="openfilekb"          key="&openPage.key;"         observes="cmd_openFile"  modifiers="accel"/>
  <key id="findkb"              key="&findCmd.key;"          observes="cmd_bgfind"    modifiers="accel"/>
  <key id="findagainkb"         key="&findAgainCmd.key;"     observes="cmd_bgfindagain" modifiers="accel"/>
  <key id="replacekb"           key="&replaceCmd.key;"       observes="cmd_replace"   modifiers="accel"/>

  <key id="strongkb"            key="&styleStrong.key;"      observes="cmd_strong"    modifiers="accel"/>
  <key id="emkb"                key="&styleEm.key;"          observes="cmd_em"        modifiers="accel"/>
  <key id="codekb"              key="&styleCode.key;"        observes="cmd_code"      modifiers="accel,shift"/>
  <key id="underlinekb"         key="&styleUnderline.key;"   observes="cmd_underline" modifiers="accel"/>

  <key keycode="VK_ESCAPE"      observes="cmd_structureClimb" />
  <key id="structureclimbkb"      keycode="VK_F2"              observes="cmd_structureClimb"/>
  <key id="structurefirstchildkb" keycode="VK_F2"              observes="cmd_structureFirstChild" modifiers="shift"/>
  <key id="structurenextkb"       keycode="VK_F4"              observes="cmd_structureNext"/>
  <key id="structurepreviousbkb"  keycode="VK_F4"              observes="cmd_structurePrevious" modifiers="shift"/>

  <key id="toggleviewkb"          keycode="VK_F8"              observes="cmd_toggleView"/>


  <key id="printkb"               key="&printCmd.commandkey;" observes="cmd_print" modifiers="accel"/>

   <key id="key_BGundo"  key="&undoCmd.key;"  modifiers="accel" command="cmd_BGundo"/>  
   <key id="key_BGredo"  key="&redoCmd.key;"  modifiers="accel" command="cmd_BGredo"/>  
   <key id="key_BGcopy"  key="&copyCmd.key;"  modifiers="accel" command="cmd_BGcopy"/>  
   <key id="key_BGcut"   key="&cutCmd.key;"   modifiers="accel" command="cmd_BGcut"/>  
   <key id="key_BGpaste" key="&pasteCmd.key;" modifiers="accel" command="cmd_BGpaste"/>
   <key id="key_BGselectAll" key="&selectAllCmd.key;" modifiers="accel" command="cmd_BGselectAll"/>  
   <key id="key_BGdelete" key="&deleteCmd.key;" modifiers="accel" command="cmd_BGdelete"/>  
</keyset>

<!-- magic from chrome://global/content/editMenuOverlay.xul -->
<keyset id="editMenuKeys"/>

<!-- magic from chrome://global/content/editMenuOverlay.xul -->
<!--commandset id="editMenuCommands"/-->

<commandset id="webNavigationItems"
            commandupdater="true"
            events="navigation"
            oncommandupdate="ComposerCommands.goUpdateComposerMenuItems(this)">
  <command id="cmd_stopLoading" disabled="true" oncommand="goDoCommand('cmd_stopLoading')"/>
  <command id="cmd_new"                         oncommand="goDoCommand('cmd_new')"/>
  <command id="cmd_newWindow"                   oncommand="goDoCommand('cmd_newWindow')"/>
  <command id="cmd_newWizard"                   oncommand="goDoCommand('cmd_newWizard')"/>

  <command id="Tasks:Inspector"   oncommand="inspectDOMDocument();"/>
  <command id="Tasks:InspectPage" oncommand="inspectDOMDocument(_content.document);"/>
</commandset>

<commandset id="commonEditorMenuItems"
            commandupdater="true"
            events="create"
            oncommandupdate="ComposerCommands.goUpdateComposerMenuItems(this)">
  <command id="cmd_open"         label="&openPage.label;"    oncommand="goDoCommand('cmd_open')"/>
  <command id="cmd_openFile"     label="&openFileCmd.label;" oncommand="goDoCommand('cmd_openFile')"/>
</commandset>

<commandset id="composerMenuItems"
            commandupdater="true"
            events="create,style,mode_switch"
            oncommandupdate="ComposerCommands.goUpdateComposerMenuItems(this)">

  <command id="cmd_list"             oncommand="goDoCommand('cmd_list')"/>
  <command id="cmd_table"            oncommand="goDoCommand('cmd_table')"/>
  <command id="cmd_image"            oncommand="goDoCommand('cmd_image')"/>
  <command id="cmd_image2"            oncommand="goDoCommand('cmd_image2')"/>
  <command id="cmd_anchor"           oncommand="goDoCommand('cmd_anchor')"/>
  <command id="cmd_link"             oncommand="goDoCommand('cmd_link')"/>
  <command id="cmd_hr"               oncommand="goDoCommand('cmd_hr')"/>
  <command id="cmd_css"              oncommand="goDoCommand('cmd_css')"/>
  <command id="cmd_domexplorer"      oncommand="goDoCommand('cmd_domexplorer')"/>
  <command id="cmd_commentOrPI"      oncommand="goDoCommand('cmd_commentOrPI')"/>
  <command id="cmd_video"            oncommand="goDoCommand('cmd_video')"/>
  <command id="cmd_audio"            oncommand="goDoCommand('cmd_audio')"/>
  <command id="cmd_html"             oncommand="goDoCommand('cmd_html')"/>
  <command id="cmd_form"             oncommand="goDoCommand('cmd_form')"/>
  <command id="cmd_toc"              oncommand="goDoCommand('cmd_toc')"/>

  <command id="cmd_formInputHidden"   oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'hidden')"/>
  <command id="cmd_formInputText"     oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'text')"/>
  <command id="cmd_formInputSearch"   oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'search')"/>
  <command id="cmd_formInputTel"      oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'tel')"/>
  <command id="cmd_formInputUrl"      oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'url')"/>
  <command id="cmd_formInputEmail"    oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'email')"/>
  <command id="cmd_formInputPassword" oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'password')"/>
  <command id="cmd_formInputDatetime" oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'datetime')"/>
  <command id="cmd_formInputDate"     oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'date')"/>
  <command id="cmd_formInputMonth"    oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'month')"/>
  <command id="cmd_formInputWeek"     oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'week')"/>
  <command id="cmd_formInputTime"     oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'time')"/>
  <command id="cmd_formInputDatetimelocal" oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'datetime-local')"/>
  <command id="cmd_formInputNumber"   oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'number')"/>
  <command id="cmd_formInputRange"    oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'range')"/>
  <command id="cmd_formInputColor"    oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'color')"/>
  <command id="cmd_formInputCheckbox" oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'checkbox')"/>
  <command id="cmd_formInputRadio"    oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'radio')"/>
  <command id="cmd_formInputFile"     oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'file')"/>
  <command id="cmd_formInputSubmit"   oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'submit')"/>
  <command id="cmd_formInputImage"    oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'image')"/>
  <command id="cmd_formInputReset"    oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'reset')"/>
  <command id="cmd_formInputButton"   oncommand="ComposerCommands.doCommandWithValue('cmd_formInput', 'button')"/>

  <command id="cmd_fieldset"          oncommand="goDoCommand('cmd_fieldset')"/>
  <command id="cmd_label"             oncommand="goDoCommand('cmd_label')"/>
  <command id="cmd_button"            oncommand="goDoCommand('cmd_button')"/>
  <command id="cmd_select"            oncommand="goDoCommand('cmd_select')"/>
  <command id="cmd_textarea"          oncommand="goDoCommand('cmd_textarea')"/>
  <command id="cmd_keygen"            oncommand="goDoCommand('cmd_keygen')"/>
  <command id="cmd_output"            oncommand="goDoCommand('cmd_output')"/>
  <command id="cmd_progress"          oncommand="goDoCommand('cmd_progress')"/>
  <command id="cmd_meter"             oncommand="goDoCommand('cmd_meter')"/>
  <command id="cmd_datalist"          oncommand="goDoCommand('cmd_datalist')"/>

  <command id="cmd_pageProperties"    oncommand="goDoCommand('cmd_pageProperties')"/>

  <command id="cmd_spellCheck"        oncommand="goDoCommand('cmd_spellCheck')"/>

  <command id="cmd_gotoLink"          oncommand="goDoCommand('cmd_gotoLink')"/>
  <command id="cmd_editLink"          oncommand="goDoCommand('cmd_editLink')"/>

  <command id="cmd_toggleView"        oncommand="goDoCommand('cmd_toggleView')"/>
</commandset>

<commandset id="composerStyleMenuItems"
            commandupdater="true"
            events="create,select,style,mode_switch"
            oncommandupdate="ComposerCommands.goUpdateComposerMenuItems(this)">
  <command id="cmd_bold"         state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_bold')"/>
  <command id="cmd_italic"       state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_italic')"/>
  <command id="cmd_underline"    state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_underline')"/>
  <command id="cmd_strong"       state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_strong')"/>
  <command id="cmd_em"           state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_em')"/>
  <command id="cmd_strikethrough" state="false"    oncommand="ComposerCommands.doStyleUICommand('cmd_strikethrough');"/>
  <command id="cmd_superscript"  state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_superscript');"/>
  <command id="cmd_subscript"    state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_subscript');"/>
  <command id="cmd_nobreak"      state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_nobreak');"/>

  <command id="cmd_cite"         state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_cite')"/>
  <command id="cmd_abbr"         state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_abbr')"/>
  <command id="cmd_acronym"      state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_acronym')"/>
  <command id="cmd_code"         state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_code')"/>
  <command id="cmd_samp"         state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_samp')"/>
  <command id="cmd_var"          state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_var')"/>
  <command id="cmd_tt"           state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_tt')"/>

  <command id="cmd_span"                           oncommand="goDoCommand('cmd_span')"/>

  <command id="cmd_paragraphState" state=""        oncommand="ComposerCommands.doStatefulCommand('cmd_paragraphState', event.target.value)"/>
  <command id="cmd_fontFace"     state=""          oncommand="ComposerCommands.doStatefulCommand('cmd_fontFace', event.target.value)"/>
  <command id="cmd_class"        state=""          oncommand="ComposerCommands.doStatefulCommand('cmd_class', event.target.value)"/>
  <command id="cmd_id"           state=""          oncommand="ComposerCommands.doStatefulCommand('cmd_id', event.target.value)"/>
  <command id="cmd_ariaRole"     state=""          oncommand="ComposerCommands.doStatefulCommand('cmd_ariaRole', event.target.value)"/>
  <command id="cmd_renderedHTMLEnabler"/>
  <command id="cmd_renderedSourceEnabler"/>
  <command id="cmd_renderedAllEnabler"/>
  <command id="cmd_viewModeEnabler"/>
  <command id="cmd_structureClimb"                 oncommand="goDoCommand('cmd_structureClimb')"/>
  <command id="cmd_structureFirstChild"            oncommand="goDoCommand('cmd_structureFirstChild')"/>
  <command id="cmd_structureNext"                  oncommand="goDoCommand('cmd_structureNext')"/>
  <command id="cmd_structurePrevious"              oncommand="goDoCommand('cmd_structurePrevious')"/>
  <command id="cmd_ul"           state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_ul')"/>
  <command id="cmd_ol"           state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_ol')"/>
  <command id="cmd_align"        state="left"      oncommand="ComposerCommands.doStatefulCommand('cmd_align', event.target.value)"/>

  <command id="cmd_dd"           state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_dd')"/>
  <command id="cmd_dt"           state="false"     oncommand="ComposerCommands.doStyleUICommand('cmd_dt')"/>

  <command id="cmd_indent"                         oncommand="goDoCommand('cmd_indent')"/>
  <command id="cmd_outdent"                        oncommand="goDoCommand('cmd_outdent')"/>
  <command id="cmd_blockquote"                     oncommand="goDoNoCSSCommand('cmd_blockquote')"/>

  <command id="cmd_removeStyles"                   oncommand="goDoCommand('cmd_removeStyles')"/>
  <command id="cmd_removeLinks"                    oncommand="goDoCommand('cmd_removeLinks')"/>

  <command id="cmd_fontColor"       state=""/>
  <command id="cmd_backgroundColor" state="transparent"/>
</commandset>

<commandset id="selectionBasedCommands"
            commandupdater="true"
            events="style,create"
            oncommandupdate="ComposerCommands.goUpdateComposerMenuItems(this);">
  <command id="cmd_selectionChanged"/>
  <command id="cmd_BGundo" label="&undoCmd.label;" 
           accesskey="&undoCmd.accesskey;"
           oncommand="goDoCommand('cmd_BGundo')"
           disabled="true"/>
  <command id="cmd_BGredo" label="&redoCmd.label;"
           accesskey="&redoCmd.accesskey;"
           oncommand="goDoCommand('cmd_BGredo')"
           disabled="true"/>
  <command id="cmd_BGcut" label="&cutCmd.label;"
           accesskey="&cutCmd.accesskey;"
           oncommand="goDoCommand('cmd_BGcut')"
           disabled="true"/>
  <command id="cmd_BGcopy" label="&copyCmd.label;"
           accesskey="&copyCmd.accesskey;"
           oncommand="goDoCommand('cmd_BGcopy')"
           disabled="true"/>
  <command id="cmd_BGpaste" label="&pasteCmd.label;"
           accesskey="&pasteCmd.accesskey;"
           oncommand="goDoCommand('cmd_BGpaste')"
           disabled="true"/>
  <command id="cmd_BGdelete" label="&deleteCmd.label;"
           accesskey="&deleteCmd.accesskey;"
           oncommand="goDoCommand('cmd_BGdelete')"
           disabled="true"/>
  <command id="cmd_BGselectAll" label="&selectAllCmd.label;"
           accesskey="&selectAllCmd.accesskey;"
           oncommand="goDoCommand('cmd_BGselectAll')"
           disabled="true"/>
  <command id="cmd_copyHTMLCode"
           oncommand="goDoCommand('cmd_copyHTMLCode')"
           disabled="true"/>
  <command id="cmd_BGpasteNoFormatting" label="&pasteNoFormatting.label;"
           accesskey="&pasteNoFormatting.accesskey;"
           oncommand="goDoCommand('cmd_BGpasteNoFormatting')"
           disabled="true"/>

</commandset>

<commandset id="composerSaveMenuItems"
            commandupdater="true"
            events="create,style,save"
            oncommandupdate="ComposerCommands.goUpdateComposerMenuItems(this)">
  <command id="cmd_save"           label="&saveCmd.label;"           oncommand="goDoCommand('cmd_save')"/>
  <command id="cmd_saveAs"         label="&saveAsCmd.label;"         oncommand="goDoCommand('cmd_saveAs')"/>
  <command id="cmd_closeTab"       label="&closeTabCmd.label;"       oncommand="goDoCommand('cmd_closeTab')"/>

  <command id="cmd_print"          label="&printCmd.label;"          oncommand="goDoCommand('cmd_print')"/>
  <command id="cmd_printSettings"  label="&printSetupCmd.label;"     oncommand="goDoCommand('cmd_printSettings')"/>

  <command id="cmd_bgfind"         label="&findCmd.label;"           accesskey="&findCmd.accesskey;"    oncommand="goDoCommand('cmd_bgfind')"/>
  <command id="cmd_bgfindagain"    label="&findAgainCmd.label;"      accesskey="&findAgainCmd.accesskey;" oncommand="goDoCommand('cmd_bgfindagain')"/>
  <command id="cmd_replace"        label="&replaceCmd.label;"        accesskey="&replaceCmd.accesskey;" oncommand="goDoCommand('cmd_replace')"/>
  <command id="cmd_browse"                                           oncommand="goDoCommand('cmd_browse')"/>
</commandset>

<commandset id="composerEditMenuItems"
            commandupdater="true"
            events="create, mode_switch"
            oncommandupdate="ComposerCommands.goUpdateComposerMenuItems(this)">
  <command id="cmd_cleanup"         oncommand="goDoCommand('cmd_cleanup')"      label="&markupCleanerCmd.label;" accesskey="&markupcleaner.accesskey;"/>
</commandset>

<commandset id="composerTableMenuItems"
            commandupdater="true"
            events="create,style,mode_switch"
            oncommandupdate="ComposerCommands.goUpdateComposerMenuItems(this)">
  <!-- Table menu -->
  <command id="cmd_SelectTable"         oncommand="goDoCommand('cmd_SelectTable')"/>
  <command id="cmd_SelectTableCaption"  oncommand="goDoCommand('cmd_SelectTableCaption')"/>
  <command id="cmd_SelectRow"           oncommand="goDoCommand('cmd_SelectRow')"/>
  <command id="cmd_SelectColumn"        oncommand="goDoCommand('cmd_SelectColumn')"/>
  <command id="cmd_SelectCell"          oncommand="goDoCommand('cmd_SelectCell')"/>
  <command id="cmd_SelectAllCells"      oncommand="goDoCommand('cmd_SelectAllCells')"/>
  <command id="cmd_InsertTable"         oncommand="goDoCommand('cmd_InsertTable')"/>
  <command id="cmd_InsertTableCaption"  oncommand="goDoCommand('cmd_InsertTableCaption')"/>
  <command id="cmd_InsertRowAbove"      oncommand="goDoCommand('cmd_InsertRowAbove')"/>
  <command id="cmd_InsertRowBelow"      oncommand="goDoCommand('cmd_InsertRowBelow')"/>
  <command id="cmd_InsertColumnBefore"  oncommand="goDoCommand('cmd_InsertColumnBefore')"/>
  <command id="cmd_InsertColumnAfter"   oncommand="goDoCommand('cmd_InsertColumnAfter')"/>
  <command id="cmd_InsertCellBefore"    oncommand="goDoCommand('cmd_InsertCellBefore')"/>
  <command id="cmd_InsertCellAfter"     oncommand="goDoCommand('cmd_InsertCellAfter')"/>
  <command id="cmd_DeleteTable"         oncommand="goDoCommand('cmd_DeleteTable')"/>
  <command id="cmd_DeleteTableCaption"  oncommand="goDoCommand('cmd_DeleteTableCaption')"/>
  <command id="cmd_DeleteRow"           oncommand="goDoCommand('cmd_DeleteRow')"/>
  <command id="cmd_DeleteColumn"        oncommand="goDoCommand('cmd_DeleteColumn')"/>
  <command id="cmd_DeleteCell"          oncommand="goDoCommand('cmd_DeleteCell')"/>
  <command id="cmd_DeleteCellContents"  oncommand="goDoCommand('cmd_DeleteCellContents')"/>
  <command id="cmd_NormalizeTable"      oncommand="goDoCommand('cmd_NormalizeTable')"/>
  <command id="cmd_JoinTableCells"      oncommand="goDoCommand('cmd_JoinTableCells')"/>
  <command id="cmd_SplitTableCell"      oncommand="goDoCommand('cmd_SplitTableCell')"/>
  <command id="cmd_ConvertToTable"      oncommand="goDoCommand('cmd_ConvertToTable')"/>
  <command id="cmd_TableOrCellColor"    oncommand="goDoCommand('cmd_TableOrCellColor')"/>
  <command id="cmd_editTable"           oncommand="goDoCommand('cmd_editTable')"/>
</commandset>

<keyset id="editorKeys">
  <key id="key_newNavigator"   key="t" modifiers="accel"       observes="cmd_new"/>
  <key id="key_newWindow"      key="n" modifiers="accel"       observes="cmd_newWindow"/>
  <key id="key_newWithOptions" key="n" modifiers="accel,shift" oncommand="NewDocumentWithOptions(event);"/>
</keyset>

<stringbundleset id="languageSet">
  <stringbundle id="bundleRegions"      src="chrome://global/locale/regionNames.properties"/>
  <stringbundle id="bundleLanguages"    src="chrome://global/locale/languageNames.properties"/>
  <stringbundle id="bundlePreferences"  src="chrome://bluegriffon/locale/language.properties"/>
  <stringbundle id="bundleHTML5"        src="chrome://bluegriffon/locale/html5.properties"/>
  <stringbundle id="bundleAccepted"     src="resource://gre/res/language.properties"/>
  <stringbundle id="bundleOpenLocation" src="chrome://bluegriffon/locale/openLocation.properties"/>
</stringbundleset>

<stringbundleset id="otherBundles"/>


  <menubar id="composer-main-menubar" class="chromeclass-menubar"
           fullscreentoolbar="true">

    <menu id="fileMenu" label="&fileMenu.label;" accesskey="&fileMenu.accesskey;">
      <menupopup id="fileMenu_popup">
        <menuitem label="&newMenu.label;" accesskey="&newMenu.accesskey;" key="key_newNavigator"
                  command="cmd_new"/>
        <menuitem label="&newWizardMenu.label;"
                  command="cmd_newWizard"/>
        <menu id="menu_RecentFiles" accesskey="&filerecentmenu.accesskey;" label="&fileRecentMenu.label;"
              onpopupshowing="RecentPagesHandler.buildRecentPagesMenu();">
          <menupopup id="menupopup_RecentFiles"
                      oncommand="OpenFile(event.target.getAttribute('value'), true);"/>
            <!-- menuitems appended at runtime -->
        </menu>

        <menuseparator/>
        <menuitem label="&newWindow.label;" key="key_newWindow"
                  command="cmd_newWindow" />

        <menuseparator/>
        <menuitem id="openPageMenuitem" accesskey="&openPage.accesskey;" key="openpagekb" command="cmd_open"/>
        <menuitem id="openFileMenuitem"                                  key="openfilekb" command="cmd_openFile"/>

        <menuseparator/>
        <menuitem id="saveMenuitem"   key="savekb" command="cmd_save"/>
        <menuitem id="saveAsMenuitem" key="saveaskb" command="cmd_saveAs"/>

        <menuseparator/>
        <menuitem id="printSettingsMenuitem" command="cmd_printSettings"/>
        <menuitem id="printMenuitem"         command="cmd_print" key="printkb"/>

        <menuseparator/>
        <menuitem id="closeTabMenuitem" key="closetabkb" command="cmd_closeTab"/>

        <menuseparator id="menu_FileQuitSeparator"/>
        <menuitem id="menu_FileQuitItem"
                  label="&quit.label;"
                  accesskey="&quit.accesskey;"
                  key="key_quitApplication"
                  oncommand="SaveTabs(); goQuitApplication()"/>
      </menupopup>
    </menu>

    <menu id="editMenu"   label="&editMenu.label;"   accesskey="&editMenu.accesskey;">
      <menupopup id="editMenuPopup">
        <!-- magic from chrome://global/content/editMenuOverlay.xul -->
        <menuitem id="menu_BGundo" command="cmd_BGundo" key="key_BGundo"/>
        <menuitem id="menu_BGredo" command="cmd_BGredo" key="key_BGredo"/>
        <menuseparator/>
        <menuitem id="menu_BGcut"   command="cmd_BGcut"  key="key_BGcut"/>
        <menuitem id="menu_BGcopy"  command="cmd_BGcopy" key="key_BGcopy"/>
        <menuitem id="menu_BGpaste" command="cmd_BGpaste" key="key_BGpaste"/>
        <menuitem id="menu_BGpasteNoFormatting_cm" command="cmd_BGpasteNoFormatting"/>
        <menuitem id="menu_BGdelete"  command="cmd_BGdelete"/>
        <menuseparator/>
        <menu label="&select.label;">
          <menupopup>
            <menuitem label="&parentElement.label;"
                      key="structureclimbkb"
                      command="cmd_structureClimb"/>
            <menuitem label="&firstChild.label;"
                      key="structurefirstchildkb"
                      command="cmd_structureFirstChild"/>
            <menuseparator/>
            <menuitem label="&nextSibling.label;"
                      key="structurenextkb"
                      command="cmd_structureNext"/>
            <menuitem label="&previousSibling.label;"
                      key="structurepreviousbkb"
                      command="cmd_structurePrevious"/>
          </menupopup>
        </menu>
        <menuitem id="menu_BGselectAll" command="cmd_BGselectAll" key="key_BGselectAll"/>
        <menuseparator/>
        <menuitem id="menu_copyHTMLCode"
                  label="&copyHTMLCodeCmd.label;"
                  accesskey="&copyHTMLCodeCmd.accesskey;"
                  command="cmd_copyHTMLCode"/>
        <menuseparator/>
        <menuitem id="menu_gotoLink"
                  label="&gotoLink.label;"
                  accesskey="&gotoLink.accesskey;"
                  command="cmd_gotoLink"/>
        <menuitem id="menu_editLink"
                  label="&openLinkCmdInTab.label;"
                  command="cmd_editLink"/>
        <menuseparator/>
        <menuitem label="&spellCheck.label;"
                  accesskey="&spellCheck.accesskey;"
                  command="cmd_spellCheck"/>
        <menuseparator/>
        <menuitem id="bgmenu_find" command="cmd_bgfind"
                  key="findkb"/>
        <menuitem id="bgmenu_findAgain" command="cmd_bgfindagain"
                  key="findagainkb"/>
        <menuitem id="bgmenu_replace" command="cmd_replace"
                  key="replacekb"/>
      </menupopup>
    </menu>

    <menu id="viewMenu"   label="&viewMenu.label;"   accesskey="&viewMenu.accesskey;">
      <menupopup id="viewMenuPopup"
                 onpopupshowing="UpdateViewMenu()">
        <menuitem label="&allTagsMode.label;"
                  type="checkbox"
                  id="allTagsModeMenuitem"
                  observes="cmd_renderedHTMLEnabler"
                  oncommand="ToggleAllTagsMode()"/>
        <menuseparator/>
        <!--menu label="&viewToolbars.label;">
          <menupopup id="viewToolbarsPopup"
                     onpopupshowing="BGToolbarManager.listToolbars(this)"/>
        </menu>
        <menuitem label="&viewStatusbar.label;"
                  oncommand="BGToolbarManager.goToggleToolbar('statusbar')" /-->
        <menu label="&source.label;" observes="cmd_renderedSourceEnabler">
          <menupopup>
            <menu label="&theme.label;">
              <menupopup id="themesMenupopup"
                         onpopupshowing="FillAceThemesMenupopup()"
                         oncommand="UseAceTheme(event)"/>
            </menu>
          </menupopup>
        </menu>
        <menuseparator/>
        <menuitem label="&toggleViewMenu.label;"
                  id="toggleViewMenuitem"
                  accesskey="&toggleViewMenu.accesskey;"
                  key="toggleviewkb"
                  command="cmd_toggleView"/>
      </menupopup>
    </menu>

    <menu id="insertMenu" label="&insertMenu.label;" accesskey="&insertMenu.accesskey;">
      <menupopup id="insertMenuPopup">
        <menuitem label="&imageToolbarCmd.label;"
                  command="cmd_image"
                  accesskey="&imageToolbarCmd.key;"/>
        <menuitem label="&tableToolbarCmd.label;"
                  command="cmd_InsertTable"
                  accesskey="&tableToolbarCmd.key;"/>
        <menuitem label="&linkToolbarCmd.label;"
                  command="cmd_link"
                  accesskey="&linkToolbarCmd.key;"/>
        <menuitem label="&anchorToolbarCmd.label;"
                  command="cmd_anchor"
                  accesskey="&anchorToolbarCmd.key;"/>
        <menuitem label="&hrToolbarCmd.label;"
                  command="cmd_hr"
                  accesskey="&hrToolbarCmd.key;"/>
        <menu label="&formToolbarCmd.label;">
            <menupopup>
              <menuitem label="&formToolbarCmd.label;"
                        accesskey="&formToolbarCmd.key;"
                        command="cmd_form"/>
              <menuseparator/>
              <menu label="&formInputs.label;">
                <menupopup>
                    <menuitem label="&hiddenInputForm.label;"
                              command="cmd_formInputHidden"/>
                    <menuitem label="&textInputForm.label;"
                              command="cmd_formInputText"/>
                    <menuitem label="&searchInputForm.label;"
                              command="cmd_formInputSearch"/>
                    <menuitem label="&telInputForm.label;"
                              command="cmd_formInputTel"/>
                    <menuitem label="&urlInputForm.label;"
                              command="cmd_formInputUrl"/>
                    <menuitem label="&emailInputForm.label;"
                              command="cmd_formInputEmail"/>
                    <menuitem label="&passwordInputForm.label;"
                              command="cmd_formInputPassword"/>
                    <menuitem label="&datetimeInputForm.label;"
                              command="cmd_formInputDatetime"/>
                    <menuitem label="&dateInputForm.label;"
                              command="cmd_formInputDate"/>
                    <menuitem label="&monthInputForm.label;"
                              command="cmd_formInputMonth"/>
                    <menuitem label="&weekInputForm.label;"
                              command="cmd_formInputWeek"/>
                    <menuitem label="&timeInputForm.label;"
                              command="cmd_formInputTime"/>
                    <menuitem label="&datetimelocalInputForm.label;"
                              command="cmd_formInputDatetimelocal"/>
                    <menuitem label="&numberInputForm.label;"
                              command="cmd_formInputNumber"/>
                    <menuitem label="&rangeInputForm.label;"
                              command="cmd_formInputRange"/>
                    <menuitem label="&colorInputForm.label;"
                              command="cmd_formInputColor"/>
                    <menuitem label="&checkboxInputForm.label;"
                              command="cmd_formInputCheckbox"/>
                    <menuitem label="&radioInputForm.label;"
                              command="cmd_formInputRadio"/>
                    <menuitem label="&fileInputForm.label;"
                              command="cmd_formInputFile"/>
                    <menuitem label="&submitInputForm.label;"
                              command="cmd_formInputSubmit"/>
                    <menuitem label="&imageInputForm.label;"
                              command="cmd_formInputImage"/>
                    <menuitem label="&resetInputForm.label;"
                              command="cmd_formInputReset"/>
                    <menuitem label="&buttonInputForm.label;"
                              command="cmd_formInputButton"/>
                 </menupopup>
              </menu>
              <menuitem label="&fieldsetToolbarCmd.label;"
                        accesskey="&fieldsetToolbarCmd.key;"
                        command="cmd_fieldset"/>
              <menuitem label="&labelToolbarCmd.label;"
                        accesskey="&labelToolbarCmd.key;"
                        command="cmd_label"/>
              <menuitem label="&buttonToolbarCmd.label;"
                        accesskey="&buttonToolbarCmd.key;"
                        command="cmd_button"/>
              <menuitem label="&selectToolbarCmd.label;"
                        accesskey="&selectToolbarCmd.key;"
                        command="cmd_select"/>
              <menuitem label="&textareaToolbarCmd.label;"
                        accesskey="&textareaToolbarCmd.key;"
                        command="cmd_textarea"/>
              <menuitem label="&keygenToolbarCmd.label;"
                        accesskey="&keygenToolbarCmd.key;"
                        command="cmd_keygen"/>
              <menuitem label="&outputToolbarCmd.label;"
                        accesskey="&outputToolbarCmd.key;"
                        command="cmd_output"/>
              <menuitem label="&progressToolbarCmd.label;"
                        accesskey="&progressToolbarCmd.key;"
                        command="cmd_progress"/>
              <menuitem label="&meterToolbarCmd.label;"
                        accesskey="&meterToolbarCmd.key;"
                        command="cmd_meter"/>
              <menuitem label="&datalistToolbarCmd.label;"
                        accesskey="&datalistToolbarCmd.key;"
                        command="cmd_datalist"/>
           </menupopup>
        </menu>
        <menuseparator/>
          <menuitem label="&tableOfContents.label;"
                    observes="cmd_renderedHTMLEnabler"
                    oncommand="CreateOrUpdateTableOfContents()"/>
        <menuseparator/>
        <menu label="&html5Element.label;">
          <menupopup id="html5InsertionMenupopup"
                     onpopupshowing="HTML5Helper.initInsertMenu(this)"/>
        </menu>
        <menuseparator/>
        <menuitem label="&htmlToolbarCmd.label;"
                  command="cmd_html"
                  accesskey="&htmlToolbarCmd.key;"/>
        <menuitem label="&commentOrPHPOrPI.label;"
                  command="cmd_commentOrPI"/>
        <menuseparator/>
        <menu label="&webfonts.label;">
          <menupopup id="webfontsMenupopup"/>
        </menu>
        <menuseparator/>
        <menuitem label="&specialChars.label;"
                  oncommand="OpenCharInsertionDialog()"/>
      </menupopup>
    </menu>

    <menu id="formatMenu" label="&formatMenu.label;" accesskey="&formatMenu.accesskey;">
      <menupopup id="formatMenuPopup" onpopupshowing="initFontStyleMenu(this)">
        <menuitem label="&spanCmd.label;"
                  command="cmd_span"
                  accesskey="&spanCmd.accesskey;"/>
        <menuseparator/>
        <menuitem label="&styleBoldCmd.label;"        accesskey="&stylebold.accesskey;"         observes="cmd_bold"          type="checkbox"/>
        <menuitem label="&styleItalicCmd.label;"      accesskey="&styleitalic.accesskey;"       observes="cmd_italic"        type="checkbox"/>
        <menuitem label="&styleUnderlineCmd.label;"   accesskey="&styleunderline.accesskey;"    observes="cmd_underline"     type="checkbox" key="underlinekb"/>
        <menuitem label="&styleStrikeThruCmd.label;"  accesskey="&stylestrikethru.accesskey;"   observes="cmd_strikethrough" type="checkbox"/>
        <menuitem label="&styleSuperscriptCmd.label;" accesskey="&stylesuperscript.accesskey;"  observes="cmd_superscript"   type="checkbox"/>
        <menuitem label="&styleSubscriptCmd.label;"   accesskey="&stylesubscript.accesskey;"    observes="cmd_subscript"     type="checkbox"/>
        <menuitem label="&fontFixedWidth.label;"      accesskey="&fontfixedwidth.accesskey;"    observes="cmd_tt"            type="checkbox"/>
        <menuitem label="&styleNonbreakingCmd.label;" accesskey="&stylenonbreaking.accesskey;"  observes="cmd_nobreak"       type="checkbox"/>
        <menuseparator/>
        <menuitem label="&styleEm.label;"             accesskey="&styleEm.accesskey;"           observes="cmd_em"            type="checkbox" key="emkb"/>
        <menuitem label="&styleStrong.label;"         accesskey="&styleStrong.accesskey;"       observes="cmd_strong"        type="checkbox" key="strongkb"/>
        <menuitem label="&styleCite.label;"           accesskey="&styleCite.accesskey;"         observes="cmd_cite"          type="checkbox"/>
        <menuitem label="&styleAbbr.label;"           accesskey="&styleAbbr.accesskey;"         observes="cmd_abbr"          type="checkbox"/>
        <menuitem label="&styleAcronym.label;"        accesskey="&styleAcronym.accesskey;"      observes="cmd_acronym"       type="checkbox"/>
        <menuitem label="&styleCode.label;"           accesskey="&styleCode.accesskey;"         observes="cmd_code"          type="checkbox" key="codekb"/>
        <menuitem label="&styleSamp.label;"           accesskey="&styleSamp.accesskey;"         observes="cmd_samp"          type="checkbox"/>
        <menuitem label="&styleVar.label;"            accesskey="&styleVar.accesskey;"          observes="cmd_var"           type="checkbox"/>
        <menuseparator/>
        <menuitem id="menu_removeAllStyles"  label="&removeAllStyles.label;"  accesskey="&removeAllStyles.accesskey;"  command="cmd_removeStyles"/>
        <menuitem id="menu_removeAllLinks"   label="&removeAllLinks.label;"   accesskey="&removeAllLinks.accesskey;"   command="cmd_removeLinks"/>
        <menuseparator />
        <menuitem label="&listProperties.label;" command="cmd_list"/>
        <menuseparator/>
        <menuitem label="&pageProperties.label;" command="cmd_pageProperties"/>
      </menupopup>
    </menu>

    <menu id="tableMenu" label="&tableMenu.label;" accesskey="&tableMenu.accesskey;">
      <menupopup id="tableMenuPopup">
        <menu id="tableInsertMenu" label="&tableInsertMenu.label;" accesskey="&tableinsertmenu.accesskey;">
          <menupopup>
            <menuitem label="&tableTable.label;"        accesskey="&tabletable.accesskey;"        command="cmd_InsertTable"/>
            <menuseparator />
            <menuitem label="&tableCaption.label;"                                                command="cmd_InsertTableCaption"/>
            <menuseparator />
            <menuitem label="&tableRowAbove.label;"     accesskey="&tablerow.accesskey;"          command="cmd_InsertRowAbove"/>
            <menuitem label="&tableRowBelow.label;"     accesskey="&tablerowbelow.accesskey;"     command="cmd_InsertRowBelow"/>
            <menuseparator />
            <menuitem label="&tableColumnBefore.label;" accesskey="&tablecolumn.accesskey;"       command="cmd_InsertColumnBefore"/>
            <menuitem label="&tableColumnAfter.label;"  accesskey="&tablecolumnafter.accesskey;"  command="cmd_InsertColumnAfter"/>
            <menuseparator />
            <menuitem label="&tableCellBefore.label;"   accesskey="&tablecell.accesskey;"         command="cmd_InsertCellBefore"/>
            <menuitem label="&tableCellAfter.label;"    accesskey="&tablecellafter.accesskey;"    command="cmd_InsertCellAfter"/>
          </menupopup>
        </menu>
        <menu id="tableSelectMenu" label="&tableSelectMenu.label;" accesskey="&tableselectmenu.accesskey;">
          <menupopup id="tableSelectPopup">
            <menuitem id="menu_SelectTable"        label="&tableTable.label;"    accesskey="&tabletable.accesskey;"    command="cmd_SelectTable"    />
            <menuitem id="menu_SelectTableCaption" label="&tableCaption.label;"                                        command="cmd_SelectTableCaption"    />
            <menuitem id="menu_SelectRow"          label="&tableRow.label;"      accesskey="&tablerow.accesskey;"      command="cmd_SelectRow"      />
            <menuitem id="menu_SelectColumn"       label="&tableColumn.label;"   accesskey="&tablecolumn.accesskey;"   command="cmd_SelectColumn"   />
            <menuitem id="menu_SelectCell"         label="&tableCell.label;"     accesskey="&tablecell.accesskey;"     command="cmd_SelectCell"     />
            <menuitem id="menu_SelectAllCells"     label="&tableAllCells.label;" accesskey="&tableallcells.accesskey;" command="cmd_SelectAllCells" />
          </menupopup>
        </menu>
        <menu id="tableDeleteMenu" label="&tableDeleteMenu.label;" accesskey="&tabledeletemenu.accesskey;">
          <menupopup id="tableDeletePopup">
            <menuitem id="menu_DeleteTable"         label="&tableTable.label;"        accesskey="&tabletable.accesskey;"          command="cmd_DeleteTable"/>
            <menuitem id="menu_DeleteTableCaption"  label="&tableCaption.label;"                                                  command="cmd_DeleteTableCaption"/>
            <menuitem id="menu_DeleteRow"           label="&tableRows.label;"         accesskey="&tablerow.accesskey;"            command="cmd_DeleteRow"/>
            <menuitem id="menu_DeleteColumn"        label="&tableColumns.label;"      accesskey="&tablecolumn.accesskey;"         command="cmd_DeleteColumn"/>
            <menuitem id="menu_DeleteCell"          label="&tableCells.label;"        accesskey="&tablecell.accesskey;"           command="cmd_DeleteCell"/>
            <menuitem id="menu_DeleteCellContents"  label="&tableCellContents.label;" accesskey="&tablecellcontents.accesskey;"   command="cmd_DeleteCellContents"/>
          </menupopup>
        </menu>
        <menuseparator />
        <!-- menu label is set in InitTableMenu -->
        <menuitem id="menu_JoinTableCells"   label="&tableJoinCells.label;"   accesskey="&tablejoincells.accesskey;"   command="cmd_JoinTableCells"/>
        <menuitem id="menu_SplitTableCell"   label="&tableSplitCell.label;"   accesskey="&tablesplitcell.accesskey;"   command="cmd_SplitTableCell"/>
        <menuitem id="menu_ConvertToTable"   label="&convertToTable.label;"   accesskey="&converttotable.accesskey;"   command="cmd_ConvertToTable"/>
        <menuseparator />
        <menuitem id="menu_tableProperties"  label="&tableProperties.label;"  accesskey="&tableProperties.accesskey;"  command="cmd_editTable"/>

      </menupopup>
    </menu>

    <menu id="panelsMenu" label="&panelsMenu.label;" accesskey="&panelsMenu.accesskey;"
          oncommand="start_panel(event.originalTarget)">
      <menupopup id="panelsMenuPopup"
                 onpopupshowing="UpdatePanelsStatusInMenu()">
        <menuitem label="&alignPanels.label;"
                  oncommand="AlignAllPanels();"/>
        <menu label="&deckMenu.label;" id="deckMenu">
          <menupopup id="deckMenupopup"
                     onpopupshowing="UpdateDeckMenu()"
                     oncommand="DeckOrUndeckPanel(event);"/>
        </menu>
        <menuseparator id="beforeAllPanelsMenuseparator"/>
      </menupopup>
    </menu>

    <menu id="toolsMenu" label="&toolsMenu.label;" accesskey="&toolsMenu.accesskey;">
      <menupopup id="toolsPopup">
        <menuitem id="menu_cleanup" command="cmd_cleanup"/>
        <menuseparator/>
        <menuitem label="&addonsMenu.label;"  oncommand="OpenExtensionsManager()"/>
        <menuseparator/>
        <menuitem label="&consoleMenu.label;"  oncommand="OpenConsole()"/>
        <menuseparator id="menu_PrefsSeparator"/>
        <menuitem id="menu_preferences"
                  label="&preferences.label;"
                  oncommand="OpenPreferences()"/>
        <menuitem label="Venkman" id="venkmanMenuitem"
                  hidden="true"
                  oncommand="start_venkman()"/>
        <menuitem id="menu_inspector" label="DOMI" oncommand="inspectDOMDocument();" hidden="true"/>
      </menupopup>
    </menu>

    <menu id="helpMenu" label="&helpMenu.label;" accesskey="&helpMenu.accesskey;">
      <menupopup id="helpMenuPopup">
        <menuitem label="&aboutComposer.label;"
                  id="aboutName"
                  oncommand="AboutComposer()"/>
        <menuitem label="&homePage.label;"
                  oncommand="loadExternalURL('http://bluegriffon.org')"/>
        <menuseparator/>
        <menuitem label="BlueGriffon @ Twitter"
                  oncommand="loadExternalURL('http://twitter.com/BlueGriffonApp')"/>
        <menuseparator/>
        <menuitem label="&forumsHelpMenu.label;"
                  oncommand="loadExternalURL('&forums.url;')"/>
        <menuitem label="&qa.label;"
                  oncommand="loadExternalURL('http://bugzilla.bluegriffon.org')"/>
        <menuseparator/>
        <menuitem label="&addons.label;"
                  oncommand="loadExternalURL('http://bluegriffon.com')"/>
      </menupopup>
    </menu>

  </menubar>

<popupset>
  <menupopup id="menu_mac_dockmenu">
    <!-- The command cannot be cmd_newNavigator because we need to activate
         the application. -->
    <menuitem label="&newMenu.label;"
              oncommand="OpenBlueGriffonWindow();" />
  </menupopup>
</popupset>
</window>

